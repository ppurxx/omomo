[{"/Users/nick.sh/IdeaProjects/omomo/omomo/src/index.js":"1","/Users/nick.sh/IdeaProjects/omomo/omomo/src/App.js":"2","/Users/nick.sh/IdeaProjects/omomo/omomo/src/serviceWorkerRegistration.js":"3","/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/Test.js":"4","/Users/nick.sh/IdeaProjects/omomo/omomo/src/page/Login.js":"5","/Users/nick.sh/IdeaProjects/omomo/omomo/src/page/Container.js":"6","/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/Header.js":"7","/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/ListBox.js":"8","/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/InputBox.js":"9","/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/Hashtag.js":"10","/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/TagSelector.js":"11"},{"size":1104,"mtime":1612090498894,"results":"12","hashOfConfig":"13"},{"size":272,"mtime":1615699225627,"results":"14","hashOfConfig":"13"},{"size":5120,"mtime":1627564225482,"results":"15","hashOfConfig":"13"},{"size":147,"mtime":1612353534344,"results":"16","hashOfConfig":"13"},{"size":593,"mtime":1612357794788,"results":"17","hashOfConfig":"13"},{"size":340,"mtime":1615700481264,"results":"18","hashOfConfig":"13"},{"size":134,"mtime":1615700424580,"results":"19","hashOfConfig":"13"},{"size":104,"mtime":1615700431618,"results":"20","hashOfConfig":"13"},{"size":4669,"mtime":1633248228291,"results":"21","hashOfConfig":"13"},{"size":276,"mtime":1628165530684,"results":"22","hashOfConfig":"13"},{"size":681,"mtime":1628167711411,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1bmto7f",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"27"},"/Users/nick.sh/IdeaProjects/omomo/omomo/src/index.js",["53"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker\n  .register('./service-worker.js', )\n  .then(function (registration) {\n    console.log(\"Service Worker Registered\");\n  })\n  .catch(function (err) {\n    console.log(\"Service Worker Failed to Register\", err);\n  })\n\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["54","55"],"/Users/nick.sh/IdeaProjects/omomo/omomo/src/App.js",["56","57"],"import React from 'react';\nimport './App.css';\nimport Test from './component/Test';\nimport Login from './page/Login'\nimport Container from './page/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nick.sh/IdeaProjects/omomo/omomo/src/serviceWorkerRegistration.js",["58","59"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  // if ( 'serviceWorker' in navigator) {\n  //   // The URL constructor is available in all browsers that support SW.\n  //   const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n  //   if (publicUrl.origin !== window.location.origin) {\n  //     // Our service worker won't work if PUBLIC_URL is on a different origin\n  //     // from what our page is served on. This might happen if a CDN is used to\n  //     // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n  //     return;\n  //   }\n  //\n  //   window.addEventListener('load', () => {\n  //     const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  //\n  //     if (isLocalhost) {\n  //       // This is running on localhost. Let's check if a service worker still exists or not.\n  //       checkValidServiceWorker(swUrl, config);\n  //\n  //       // Add some additional logging to localhost, pointing developers to the\n  //       // service worker/PWA documentation.\n  //       navigator.serviceWorker.ready.then(() => {\n  //         console.log(\n  //           'This web app is being served cache-first by a service ' +\n  //             'worker. To learn more, visit https://cra.link/PWA'\n  //         );\n  //       });\n  //     } else {\n  //       // Is not localhost. Just register service worker\n  //       registerValidSW(swUrl, config);\n  //     }\n  //   });\n  // }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/Test.js",[],"/Users/nick.sh/IdeaProjects/omomo/omomo/src/page/Login.js",["60"],"import \"./Login.css\";\nimport btnGoogle from \"../asset/google_signin_buttons/web/1x/btn_google_signin_light_normal_web.png\";\nimport btnKakao from \"../asset/kakao_login/en/kakao_login_medium_narrow.png\";\n\n\nfunction Login(){\n  return(\n    <div>\n      <h1>omomo</h1>\n      <button\n        className = \"btn\">\n        <img\n            className =\"button-img\"\n            src={btnGoogle} alt='누르셈'/>\n      </button>\n\n      <button\n          className = \"btn\">\n        <img\n            className =\"button-img\"\n            src={btnKakao}/>\n      </button>\n    </div>\n  );\n}\n\nexport default Login;","/Users/nick.sh/IdeaProjects/omomo/omomo/src/page/Container.js",[],"/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/Header.js",[],"/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/ListBox.js",[],"/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/InputBox.js",["61","62"],"/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/Hashtag.js",["63"],"import React,{useEffect} from 'react';\nimport './Hashtag.css';\n\nfunction Hashtag(props){\n  const {tagItem, onClick} = props;\n\n  return(\n      <>\n        <button className={\"tag_button\"} onClick={e=>onClick(tagItem)}>{tagItem}</button>\n      </>\n  );\n}\n\nexport default Hashtag;","/Users/nick.sh/IdeaProjects/omomo/omomo/src/component/TagSelector.js",["64","65"],"import React, {useState} from 'react';\nimport Hashtag from \"./Hashtag\";\nimport \"./TagSelector.css\"\n\nconst TagSelector = (props) =>{\n  // const tagList = props.tagList;\n  // const hashtagClickHandler = props.hashtagClickHandler;\n  // const [setDisplay, display] = useState(false);\n\n  // const buildTagListJSX = () =>{\n  //   return tagList.map((tagItem,i) =>\n  //       <Hashtag\n  //           key={i}\n  //           tagItem={tagItem}\n  //           onClick={hashtagClickHandler}\n  //       />\n  //   );\n  // };\n\n  return (\n      <>\n        {/*<div className={\"tag-selector\"}>*/}\n        {/*  {buildTagListJSX()}*/}\n        {/*</div>*/}\n      </>\n  );\n}\n\nexport default TagSelector;",{"ruleId":"66","severity":1,"message":"67","line":5,"column":13,"nodeType":"68","messageId":"69","endLine":5,"endColumn":38},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":12},{"ruleId":"66","severity":1,"message":"75","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":13},{"ruleId":"66","severity":1,"message":"76","line":13,"column":7,"nodeType":"68","messageId":"69","endLine":13,"endColumn":18},{"ruleId":"66","severity":1,"message":"77","line":99,"column":10,"nodeType":"68","messageId":"69","endLine":99,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":19,"column":9,"nodeType":"80","endLine":21,"endColumn":29},{"ruleId":"66","severity":1,"message":"81","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":32,"column":5,"nodeType":"84","endLine":32,"endColumn":17,"suggestions":"85"},{"ruleId":"66","severity":1,"message":"86","line":1,"column":15,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"87","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"88","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":15},"no-unused-vars","'serviceWorkerRegistration' is defined but never used.","Identifier","unusedVar","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"'Test' is defined but never used.","'Login' is defined but never used.","'isLocalhost' is assigned a value but never used.","'checkValidServiceWorker' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TagSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentInputValue'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Hashtag' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [getCurrentInputValue, inputValue]",{"range":"94","text":"95"},[973,985],"[getCurrentInputValue, inputValue]"]